%h1.pt-3 Lines

%ul.nav.nav-tabs
  %li.nav-item.dropdown
    - if @sport == :nfl
      = link_to "NFL (#{@scope.to_s.humanize})", "#", class: "nav-link dropdown-toggle active", data: { bs_toggle: "dropdown" }, role: "button", "aria-expanded" => "false", "aria-current" => "page"
    - else
      = link_to "NFL", "#", class: "nav-link dropdown-toggle", data: { bs_toggle: "dropdown" }, role: "button", "aria-expanded" => "false"
    %ul.dropdown-menu
      %li.dropdown-items
        = link_to "Game", lines_path(sport: :nfl, scope: :game), class: "dropdown-item"
      %li.dropdown-items
        = link_to "First Half", lines_path(sport: :nfl, scope: :first_half), class: "dropdown-item"
      %li.dropdown-items
        = link_to "Second Half", lines_path(sport: :nfl, scope: :second_half), class: "dropdown-item"
  %li.nav-item.dropdown
    - if @sport == :ncaaf
      = link_to "NCAAF (#{@scope.to_s.humanize})", "#", class: "nav-link dropdown-toggle active", data: { bs_toggle: "dropdown" }, role: "button", "aria-expanded" => "false", "aria-current" => "page"
    - else
      = link_to "NCAAF", "#", class: "nav-link dropdown-toggle", data: { bs_toggle: "dropdown" }, role: "button", "aria-expanded" => "false"
    %ul.dropdown-menu
      %li.dropdown-items
        = link_to "Game", lines_path(sport: :ncaaf, scope: :game), class: "dropdown-item"
      %li.dropdown-items
        = link_to "First Half", lines_path(sport: :ncaaf, scope: :first_half), class: "dropdown-item"
      %li.dropdown-items
        = link_to "Second Half", lines_path(sport: :ncaaf, scope: :second_half), class: "dropdown-item"

- if @lines_by_game.count.zero?
  .blank-state.blank-state-lg
    %i.bi.bi-emoji-frown
    %h2 No #{@scope.to_s.titleize} Lines Currently Available
    %p Please check back later
- else
  %table{ class: "table table-responsive mt-0 p-0" }
    %thead
      %tr
        %th
        %th Team
        %th Spread
        %th Over/Under
    %tbody
      - @lines_by_game.each do |game, lines|
        - lines.select(&:point_spread?).sort_by(&:created_at).take(2).sort_by { |l| l.contestant.priority }.each_cons(2) do |line1, line2|
          %tr.border-0
            %td.align-bottom.pb-1.border-bottom-0.lh-1= game.starts_at.strftime("%m/%-d/%Y")
            %td.align-middle.pb-1.border-bottom-0.lh-1= line1.contestant.competitor.abbreviation
            %td.border-bottom-0.lh-1.bet-trigger
              - if game.wagerable?
                = link_to "#betOffcanvas-#{line1.id}", class: "btn btn-primary lh-1", data: { bs_toggle: "offcanvas" }, role: "button", "aria-controls" => "betOffcanvas-#{line1.id}" do
                  = line1.value.positive? ? "+#{line1.value}" : line1.value
                = render "bet_form", line: line1, user: current_user
              - else
                = line1.value.positive? ? "+#{line1.value}" : line1.value
            %td.border-bottom-0.lh-1.bet-trigger
              - line = lines.select(&:over?).first
              - if line.present?
                - if game.wagerable?
                  = render "bet_form", line: line, user: current_user
                  = link_to "#betOffcanvas-#{line.id}", class: "btn btn-primary lh-1", data: { bs_toggle: "offcanvas" }, role: "button", "aria-controls" => "betOffcanvas-#{line.id}" do
                    = "O #{line.value}"
                - else
                  = "O #{line.value}"
          %tr
            %td.align-top.pt-1.lh-1.border-bottom-0= game.starts_at.strftime("%l:%M%P")
            %td.align-middle.pt-1.lh-1.border-bottom-0= line2.contestant.competitor.abbreviation
            %td.border-bottom-0.pt-0.lh-1.bet-trigger
              - if game.wagerable?
                = render "bet_form", line: line2, user: current_user
                = link_to "#betOffcanvas-#{line2.id}", class: "btn btn-primary lh-1", data: { bs_toggle: "offcanvas" }, role: "button", "aria-controls" => "betOffcanvas-#{line2.id}" do
                  = line2.value.positive? ? "+#{line2.value}" : line2.value
              - else
                  = line2.value.positive? ? "+#{line2.value}" : line2.value
            %td.border-bottom-0.pt-0.lh-1.bet-trigger
              - line = lines.select(&:under?).first
              - if line.present?
                - if game.wagerable?
                  = render "bet_form", line: line, user: current_user
                  = link_to "#betOffcanvas-#{line.id}", class: "btn btn-primary lh-1", data: { bs_toggle: "offcanvas" }, role: "button", "aria-controls" => "betOffcanvas-#{line.id}" do
                    = "U #{line.value}"
                - else
                  = "U #{line.value}"
